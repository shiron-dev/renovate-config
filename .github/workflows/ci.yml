on: pull_request

jobs:
  all-status-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - test-check
      - lint-check
      - ci-req-check
      - renovate-dry-run
    steps:
      - name: All status check
        run: echo "All status checks passed"

  test-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: shiron-dev/actions/setup-node@9a546a8db3c1e8c45a10dbfddc64f50cfc8f061c # v1.3.2
      - name: Install package
        run: pnpm install --frozen-lockfile
      - name: Test
        run: pnpm test

  lint-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: shiron-dev/actions/setup-node@9a546a8db3c1e8c45a10dbfddc64f50cfc8f061c # v1.3.2
      - name: Install package
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint

  ci-req-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Check all-status-check
        run: |
          diff \
            <(yq ".jobs | del(.all-status-check) | keys.[]" .github/workflows/ci.yml) \
            <(yq ".jobs.all-status-check.needs.[]" .github/workflows/ci.yml)

  renovate-dry-run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm install renovate
      - name: Dry-run Renovate
        id: renovate-dry-run
        run: |
          RENOVATE_LOG=$(npx renovate --dry-run=full --require-config=ignored --platform=local)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "log<<$EOF"
            echo "$RENOVATE_LOG"
            echo "$EOF"
          } >> "$GITHUB_OUTPUT"
          echo "$RENOVATE_LOG"
        env:
          LOG_LEVEL: debug
          LOG_FORMAT: json
          RENOVATE_BASE_BRANCHES: ${{ github.head_ref }}
          RENOVATE_CONFIG_FILE: default.json
      - name: Check deps
        id: check-deps
        run: |
          DEP_OUT=$( echo '${{ steps.renovate-dry-run.outputs.log }}'\
            | jq --raw-output '
              select(.msg == "packageFiles with updates") |
              .config |
              to_entries |
              group_by(.key) |
              map({
                key: .[0].key,
                files: map(.value) | flatten
              }) |
              map({
                key,
                files: .files | map({
                  packageFile,
                  deps: .deps | map({
                    depName,
                    currentValue,
                    currentDigest
                  })
                })
              })
            ' )
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "comment<<$EOF"
            echo "$DEP_OUT" | jq -r '
              .[] |
              "<details><summary>\(.key)</summary><blockquote>\n" +
              (.files | map(
                "<details><summary>\(.packageFile)</summary>\n\n" +
                (.deps | map(if .currentDigest then " - `\(.depName) \(.currentValue)@\(.currentDigest)`" else " - `\(.depName) \(.currentValue)`" end) | join("\n")) +
                "\n</details>"
              ) | join("\n\n") ) +
              "\n</blockquote></details>"
              '
            echo "$EOF"
          } >> "$GITHUB_OUTPUT"
      - uses: marocchino/sticky-pull-request-comment@67d0dec7b07ed060a405f9b2a64b8ab319fdd7db # v2.9.2
        if: ${{ steps.check-deps.outputs.comment != '' }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: deps-check
          message: |
            ## Renovate dry-run detected dependencies
            ${{ steps.check-deps.outputs.comment }}
